package packages

import (
	"math"
)

func init() {
	Packages["math"] = map[string]any{
		"Abs":             math.Abs,
		"Acos":            math.Acos,
		"Acosh":           math.Acosh,
		"Asin":            math.Asin,
		"Asinh":           math.Asinh,
		"Atan":            math.Atan,
		"Atan2":           math.Atan2,
		"Atanh":           math.Atanh,
		"Cbrt":            math.Cbrt,
		"Ceil":            math.Ceil,
		"Copysign":        math.Copysign,
		"Cos":             math.Cos,
		"Cosh":            math.Cosh,
		"Dim":             math.Dim,
		"Erf":             math.Erf,
		"Erfc":            math.Erfc,
		"Exp":             math.Exp,
		"Exp2":            math.Exp2,
		"Expm1":           math.Expm1,
		"Float32bits":     math.Float32bits,
		"Float32frombits": math.Float32frombits,
		"Float64bits":     math.Float64bits,
		"Float64frombits": math.Float64frombits,
		"Floor":           math.Floor,
		"Frexp":           math.Frexp,
		"Gamma":           math.Gamma,
		"Hypot":           math.Hypot,
		"Ilogb":           math.Ilogb,
		"Inf":             math.Inf,
		"IsInf":           math.IsInf,
		"IsNaN":           math.IsNaN,
		"J0":              math.J0,
		"J1":              math.J1,
		"Jn":              math.Jn,
		"Ldexp":           math.Ldexp,
		"Lgamma":          math.Lgamma,
		"Log":             math.Log,
		"Log10":           math.Log10,
		"Log1p":           math.Log1p,
		"Log2":            math.Log2,
		"Logb":            math.Logb,
		"Max":             math.Max,
		"Min":             math.Min,
		"Mod":             math.Mod,
		"Modf":            math.Modf,
		"NaN":             math.NaN,
		"Nextafter":       math.Nextafter,
		"Pow":             math.Pow,
		"Pow10":           math.Pow10,
		"Remainder":       math.Remainder,
		"Signbit":         math.Signbit,
		"Sin":             math.Sin,
		"Sincos":          math.Sincos,
		"Sinh":            math.Sinh,
		"Sqrt":            math.Sqrt,
		"Tan":             math.Tan,
		"Tanh":            math.Tanh,
		"Trunc":           math.Trunc,
		"Y0":              math.Y0,
		"Y1":              math.Y1,
		"Yn":              math.Yn,
	}
}
